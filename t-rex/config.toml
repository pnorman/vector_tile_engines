# t-rex configuration

[service.mvt]
viewer = true

[datasource]
type = "postgis"
# will need adjusting based on your username and system
url = "postgresql://pnorman@%2Fvar%2Frun%2Fpostgresql/gis"

[grid]
# Predefined grids: web_mercator, wgs84
predefined = "web_mercator"

[[tileset]]
name = "vector_demo"

[[tileset.layer]]
name = "water"
geometry_field = "way"
geometry_type = "POLYGON"
srid = 3857
buffer-size = 4
simplify = true
  [[tileset.layer.query]]
  minzoom = 0
  maxzoom = 5
  sql = """
  SELECT
        way,
        'ocean' AS water
      FROM ne_ocean
      WHERE way && !bbox!
    UNION ALL
    SELECT
        way,
        'lake' AS water
      FROM ne_lake
      WHERE way && !bbox!
  """
  [[tileset.layer.query]]
  minzoom = 5
  maxzoom = 11
  sql = """
  SELECT
      way,
      'ocean' AS water
    FROM simplified_ocean_polygons
    WHERE way && !bbox!
  UNION ALL
  SELECT
      way,
      CASE
        WHEN waterway = 'riverbank' THEN 'riverbank'
        WHEN landuse = 'reservoir' then 'reservoir'
        ELSE water
      END
    FROM planet_osm_polygon
    WHERE way && !bbox!
      AND way_area > 0.25*(!pixel_width!::real)^2
      AND (waterway = 'riverbank'
        OR landuse = 'reservoir'
        OR "natural" = 'water')
  """
  [[tileset.layer.query]]
  minzoom = 11
  sql = """
  SELECT
      way,
      'ocean' AS water
    FROM ocean_polygons
    WHERE way && !bbox!
  UNION ALL
  SELECT
      way,
      CASE
        WHEN waterway = 'riverbank' THEN 'riverbank'
        WHEN landuse = 'reservoir' then 'reservoir'
        ELSE water
      END
    FROM planet_osm_polygon
    WHERE way && !bbox!
      AND way_area > 0.25*(!pixel_width!::real)^2
      AND (waterway = 'riverbank'
        OR landuse = 'reservoir'
        OR "natural" = 'water')
  """

[[tileset.layer]]
name = "water_names"
geometry_field = "way"
geometry_type = "POINT"
srid = 3857
buffer-size = 128
simplify = true
  [[tileset.layer.query]]
  minzoom = 0
  maxzoom = 5
  sql = """
  SELECT
      ST_PointOnSurface(way) AS way,
      name,
      'lake'::text AS water
    FROM ne_lake
    WHERE way && !bbox!
      AND name IS NOT NULL
  """
  [[tileset.layer.query]]
  minzoom = 5
  sql = """
  SELECT
      ST_PointOnSurface(way) AS way,
      name,
      CASE
        WHEN waterway = 'riverbank' THEN 'riverbank'
        WHEN landuse = 'reservoir' then 'reservoir'
        ELSE water
      END
    FROM planet_osm_polygon
    WHERE way && !bbox!
      AND way_area > 16*(!pixel_width!::real)^2
      AND name IS NOT NULL
      AND (waterway = 'riverbank'
        OR landuse = 'reservoir'
        OR "natural" = 'water')
    ORDER BY way_area DESC, name
  """

[[tileset.layer]]
name = "transport"
geometry_field = "way"
geometry_type = "LINESTRING"
srid = 3857
buffer-size = 128
simplify = true
  [[tileset.layer.query]]
  minzoom = 6
  maxzoom = 10
  sql = """
  SELECT
      way,
      name,
      ref,
      highway AS class,
      CASE
        WHEN bridge IS NOT NULL AND bridge <> 'no' THEN 'bridge'
        ELSE CASE WHEN tunnel IS NOT NULL and tunnel <> 'no' THEN 'tunnel' END
      END AS brunnel
    FROM planet_osm_roads
    WHERE way && !bbox!
      AND (highway = 'motorway'
        OR highway = 'trunk' AND !zoom! >= 7
        OR highway = 'primary' AND !zoom! >= 8
        OR highway = 'secondary' AND !zoom! >= 9)
    ORDER BY
      CASE highway
        WHEN 'motorway' THEN 1
        WHEN 'trunk' THEN 2
        WHEN 'primary' THEN 3
        WHEN 'secondary' THEN 4
      END ASC,
      name,
      osm_id
  """

  [[tileset.layer.query]]
  minzoom = 10
  sql = """
  SELECT
      CASE WHEN oneway = '-1' THEN ST_Reverse(way) ELSE way END AS way,
      name,
      ref,
      CASE WHEN substr(highway, length(highway)-3, 4) = 'link' THEN substr(highway, 0, length(highway)-4) ELSE highway END AS class,
      substr(highway, length(highway)-3, 4) = 'link' AS link,
      oneway <> 'no' AS oneway,
      CASE
        WHEN bridge IS NOT NULL AND bridge <> 'no' THEN 'bridge'
        ELSE CASE WHEN tunnel IS NOT NULL and tunnel <> 'no' THEN 'tunnel' END
      END AS brunnel
    FROM planet_osm_line
    WHERE way && !bbox!
      AND (highway IN ('motorway', 'motorway_link', 'trunk', 'trunk_link',
                       'primary', 'primary_link', 'secondary', 'secondary_link',
                       'tertiary', 'tertiary_link')
        OR highway IN ('residential', 'unclassified') AND !zoom! >= 12
        OR highway IN ('service', 'track', 'footway', 'cycleway', 'bridleway', 'path') AND !zoom! >= 14)
    ORDER BY
      COALESCE(layer, 0) DESC,
      (substr(highway, length(highway)-3, 4) = 'link') DESC, -- put ramps first
      CASE highway
        WHEN 'motorway' THEN 1
        WHEN 'trunk' THEN 2
        WHEN 'primary' THEN 3
        WHEN 'secondary' THEN 4
      END ASC,
      name,
      osm_id
  """

[webserver]
# Bind address. Use 0.0.0.0 to listen on all adresses.
bind = "0.0.0.0"
port = 6767
threads = 8

